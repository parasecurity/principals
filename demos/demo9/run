#!/usr/bin/env bash
#
#  Demo 9: DDoS Attack
#
set -euo pipefail

source ../common/scripts/funcs.sh

msg "Adding demo pods"
kubectl apply -f yamls/pods

waitUntilAllPodsRun

readonly AGENT_POD_1=$(kubectl get -A po -o wide | grep "agent-server" | head -1 | awk '{print $2}')
readonly AGENT_POD_2=$(kubectl get -A po -o wide | grep "agent-server" | tail -1 | awk '{print $2}')
readonly ALICE_POD_1=alice1
readonly ALICE_POD_2=alice2
readonly ALICE_POD_3=alice3
readonly MALICE_POD=malice

msg "Adding queues on demo pods"
kubectl exec -n security "$AGENT_POD_1" -- bash -c "ovs-vsctl list-ports br-int | xargs -d '\n' -I{} ovs-vsctl set port {} qos=@newqos -- \
  --id=@newqos create qos type=linux-htb \
      queues:100=@queue -- \
  --id=@queue create queue other-config:max-rate=1000000 &> /dev/null"

kubectl exec -n security "$AGENT_POD_2" -- bash -c "ovs-vsctl list-ports br-int | xargs -d '\n' -I{} ovs-vsctl set port {} qos=@newqos -- \
  --id=@newqos create qos type=linux-htb \
      queues:100=@queue -- \
  --id=@queue create queue other-config:max-rate=1000000 &> /dev/null"

msg "Adding tsi security"
kubectl apply -f yamls/security

msg "Starting Demo"

# msg "Start $ALICE_POD_1 client on site" 
# kubectl exec -it "$ALICE_POD_1" -- ./httpClient -conn http://147.27.39.116:8080

# msg "Send a non-malicius nslookup request from $ALICE_POD_2" 
# kubectl exec -it "$ALICE_POD_2" -- nslookup amazon.com 

# msg "Send a non-malicius nslookup request from $ALICE_POD_3" 
# kubectl exec -it "$ALICE_POD_3" -- nslookup netflix.com 

# msg "Bandwidth should be limited to ~120KB/s when you are trying to download a file from the malicious domain"
# kubectl exec "$ALICE_POD_3" -- 

echo -e "\n\n"

msg "Cleaning cluster"
sleep 1
kubectl delete -f yamls/security
kubectl delete -f yamls/pods

msg "End of demo9!"
