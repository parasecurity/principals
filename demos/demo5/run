#!/usr/bin/env bash
#
#  Demo 5: Tarpitting malicious connections
#
set -euo pipefail

source ../common/scripts/funcs.sh

readonly MINIKUBE_STATUS=$(minikube status | grep host | awk '{print $2}')

if [[ "$MINIKUBE_STATUS" == "" ]];
then
	echo "Please run '../deploy.sh' first to start the cluster"
	exit 0
fi

msg "Adding tsi security"
kubectl apply -f yamls/security

msg "Adding demo pods"
kubectl apply -f yamls/pods

waitUntilAllPodsRun

readonly AGENT_POD=$(kubectl get -A po -o wide | grep "agent-server" | awk '{print $2}')
readonly AGENT_IP=$(kubectl get -A po -o wide | grep "agent-server" | awk '{print $7}')
readonly FLOW_CONTROL_POD=$(kubectl get -A po | grep "flow-control" | awk '{print $2}')

readonly ALICE_POD_1=alice1
readonly ALICE_POD_2=alice2
readonly ALICE_POD_3=alice3
readonly MALICE_POD=malice

msg "Adding queues on pods"
kubectl exec -n security "$AGENT_POD" -- bash -c "ovs-vsctl list-ports br-int | xargs -d '\n' -I{} ovs-vsctl set port {} qos=@newqos -- \
  --id=@newqos create qos type=linux-htb \
      queues:100=@queue -- \
  --id=@queue create queue other-config:max-rate=1000000 &> /dev/null"

msg "Starting Demo"

msg "Send a non-malicius nslookup request from $ALICE_POD_1" 
kubectl exec -it "$ALICE_POD_1" -- nslookup google.com

msg "Send a non-malicius nslookup request from $ALICE_POD_2" 
kubectl exec -it "$ALICE_POD_2" -- nslookup amazon.com 

msg "Send a non-malicius nslookup request from $ALICE_POD_3" 
kubectl exec -it "$ALICE_POD_3" -- nslookup netflix.com 

msg "Bandwidth should be limited to ~120KB/s when you are trying to download a file from the malicious domain"
kubectl exec "$ALICE_POD_3" -- wget http://speedtest.wdc01.softlayer.com/downloads/test100.zip > wget.log 2>&1 &
PID=$!

for i in {1..10}; do tail -n 2 ./wget.log; echo -en "\r"; sleep 1; done
echo -en "\r\n"

msg "Aplied ovs rules"
kubectl exec -n security "$AGENT_POD" -- bash -c "ovs-ofctl dump-flows br-int | grep 0x0"

msg "Removing tarpit rule to restore full speed"
kubectl exec -n security "$AGENT_POD" -- bash -c "ovs-ofctl del-flows br-int cookie=0x0/-1" &> /dev/null || true

sleep 1
for i in {1..10}; do tail -n 2 ./wget.log; echo -en "\r"; sleep 1; done
echo -en "\r\n"

kill -SIGINT $PID && true

echo -e "\n\n"

msg "Cleaning cluster"
kubectl exec -n security "$AGENT_POD" -- bash -c "ovs-ofctl del-flows br-int cookie=0x0/-1" &> /dev/null || true
sleep 1
# kubectl delete -f yamls/security
# kubectl delete -f yamls/pods

msg "End of demo5!"
