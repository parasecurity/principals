apiVersion: v1
kind: Namespace
metadata:
  name: security
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: security
  name: agent-server
  namespace: security
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: macvlan-conf
  namespace: security
spec:
  config: '{
    "cniVersion": "0.3.1",
    "type": "macvlan",
    "capabilities": { "ips": true },
    "master": "enp1s0",
    "mode": "bridge",
    "ipam": {
    "type": "static",
    "routes": [
    {
    "dst": "0.0.0.0/0",
    "gw": "10.1.1.1"
    }
    ]
    }
    }'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: security
    component: flow-server
  name: flow-server
  namespace: security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security
      component: flow-server
  template:
    metadata:
      labels:
        app: security
        component: flow-server
    spec:
      containers:
      - name: flow-server
        image: 192.168.122.1:5000/tsi-flow-server:1.0.0
        command:
          - ./tcp_server
        imagePullPolicy: Always
        ports:
          - containerPort: 12345
          - containerPort: 23456
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: flow-server-service
  namespace: security
spec:
  type: ClusterIP
  selector:
    app: security
    component: flow-server
  clusterIP: 10.104.54.10
  ports:
    - port: 12345
      targetPort: 12345
      protocol: TCP
      name: server-in
    - port: 23456
      targetPort: 23456
      protocol: TCP
      name: server-out
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: security
    component: agent-server
  name: agent-server
  namespace: security
spec:
  selector:
    matchLabels:
      app: security
      component: agent-server
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: agent-server
      labels:
        app: security
        component: agent-server
    spec:
      containers:
      - command:
          - /usr/bin/python3
        args:
          - /home/agent_server.py
          - -i=10.104.54.10
          - -p=23456
          - -l=False
        image: 192.168.122.1:5000/antrea-tsi:1.0.1
        imagePullPolicy: IfNotPresent
        name: agent-server
        ports:
          - containerPort: 12345
            hostPort: 12345
            protocol: TCP
          - containerPort: 23456 
            hostPort: 23456
            protocol: TCP
          - containerPort: 8006 
        resources:
          requests:
            cpu: 200m
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /var/run/openvswitch
            name: host-var-run-antrea
            subPath: openvswitch
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccountName: agent-server
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - hostPath:
            path: /var/run/antrea
            type: DirectoryOrCreate
          name: host-var-run-antrea
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: security
    component: flow-control
  name: flow-control
  namespace: security
spec:
  selector:
    matchLabels:
      app: security
      component: flow-control
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: flow-control
        k8s.v1.cni.cncf.io/networks: '[
          { "name": "macvlan-conf",
          "ips": [ "10.1.1.101/24" ],
          "mac": "c2:b0:57:49:47:f1",
          "gateway": [ "10.1.1.1" ]
          }]'
      labels:
        app: security
        component: flow-control
    spec:
      containers:
        - command:
            - /usr/bin/python3
          args:
            - /home/forward.py
            - -l=10.1.1.101
            - -lp=8080
            - -s=10.104.54.10
            - -sp=12345
            - -a=tarpit
          image: 192.168.122.1:5000/antrea-tsi:1.0.1
          imagePullPolicy: IfNotPresent
          name: flow-control
          resources:
            requests:
              cpu: 200m
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: security
  labels:
    app: security
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security
      component: api
  template:
    metadata:
      labels:
        app: security
        component: api
    spec:
      containers:
      - env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        name: api
        image: 192.168.122.1:5000/tsi-api:1.0.23
        volumeMounts:
          - mountPath: /home/.kube/
            name: kubeconfig
        command:
          - ./server
        args:
          - -ll=$(MY_POD_IP):8001
        ports:
        - containerPort: 8000
        - containerPort: 8001
      nodeSelector:
        dedicated: master
      volumes:
      - hostPath:
          path: /home/gntousakis/.kube/
          type: DirectoryOrCreate
        name: kubeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: security
spec:
  type: ClusterIP
  selector:
    app: security
    component: api
  clusterIP: 10.104.54.11
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: local-api
