kubernetesType: Vanilla  #Vanilla for community kubernetes distribution

# NF image
nfimage:
  repository: docker.io/oaisoftwarealliance/oai-nrf
  version: v1.5.0 #image tag, develop tag for experimental features 
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

tcpdumpimage:
  repository: corfr/tcpdump
  version: latest
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

proxyimage:
  repository: tolgaomeratalay/5gstreamsa
  version: 1.1.17
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention 
imagePullSecrets: 
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-nrf10-sa"

#service type is fixed to clusterIP, it is only support for non multus interface (eth0)

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: false

#service type is fixed to clusterIP

start:
  nrf: true
  tcpdump: false #start tcpdump collection to analyse but beware it will take a lot of space in the container/persistent volume
  proxy: false

# create multus interface in case the NRF wants to use a separate interface 
# than kubernetes general CNI or it needs to be accessed from outside cluster network using ip-address (please use amf multus.yaml as an example). 

config:
  nrfInterfaceNameForSBI: "eth1" # net1 if multus.create is set true
  nrfInterfacePortForSBI: "80"
  nrfInterfaceHttp2PortForSBI: "8080"
  nrfApiVersion: "v1"

proxyconfig:
  saname: "NRF1"
  sasubfunc: "test" # this is not used right now
  saip: "127.0.0.1" # this is currently set to podIP in the source code
  saloc: "local"
  sak8sdns: "oai-nrf10-svc"
  savnftype: "nrf"
  savnfid: "nrf1"
  sasliceid: "1"
  streamscpip: "192.168.1.119"
  streamscpport: "10090"
  randomize: "1"
  loglevel: "trace"
  clientcount: "2"
  multireg: "1"
  operationmode: "5G_SA"
  valmethod: "NONE"
  useotel: "NO" # set to yes for integrating with an OpenTelemetry node. SVC fixed for now

persistent:
  sharedvolume: false
  volumeName: managed-nfs-storage
  size: 1Gi

resources:
  define: false
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi

terminationGracePeriodSeconds: 5

readinessProbe: true

livenessProbe: false

nodeSelector:
  type: az

nodeName: k8s-worker0 
